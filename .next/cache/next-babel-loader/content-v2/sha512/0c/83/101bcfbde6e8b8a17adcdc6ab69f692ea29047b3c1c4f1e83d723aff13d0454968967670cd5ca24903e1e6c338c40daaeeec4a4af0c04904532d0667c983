{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/andrii.shymko/ch/sandbox/06-onwards-to-a-bigger-project-starting-project/pages/[meetupId]/index.js\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\nimport Head from \"next/head\";\nimport { Fragment } from \"react\";\n\nfunction MeetupDetails(props) {\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: [/*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"props.meetupData.title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        name: \"description\",\n        content: props.meetupData.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(MeetupDetail, {\n      image: props.meetupData.image,\n      title: props.meetupData.title,\n      description: props.meetupData.description,\n      address: props.meetupData.address\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 3\n  }, this);\n}\n\n_c = MeetupDetails;\nexport var __N_SSG = true;\nexport default MeetupDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"MeetupDetails\");","map":{"version":3,"sources":["/Users/andrii.shymko/ch/sandbox/06-onwards-to-a-bigger-project-starting-project/pages/[meetupId]/index.js"],"names":["MeetupDetail","Head","Fragment","MeetupDetails","props","meetupData","description","image","title","address"],"mappings":";;AACA,OAAOA,YAAP,MAAyB,uCAAzB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,QAAT,QAAyB,OAAzB;;AAEA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAC7B,sBACC,QAAC,QAAD;AAAA,4BACC,QAAC,IAAD;AAAA,8BACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,eAEC;AAAM,QAAA,IAAI,EAAC,aAAX;AAAyB,QAAA,OAAO,EAAEA,KAAK,CAACC,UAAN,CAAiBC;AAAnD;AAAA;AAAA;AAAA;AAAA,cAFD;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,eAKC,QAAC,YAAD;AACC,MAAA,KAAK,EAAEF,KAAK,CAACC,UAAN,CAAiBE,KADzB;AAEC,MAAA,KAAK,EAAEH,KAAK,CAACC,UAAN,CAAiBG,KAFzB;AAGC,MAAA,WAAW,EAAEJ,KAAK,CAACC,UAAN,CAAiBC,WAH/B;AAIC,MAAA,OAAO,EAAEF,KAAK,CAACC,UAAN,CAAiBI;AAJ3B;AAAA;AAAA;AAAA;AAAA,YALD;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AAcA;;KAfQN,a;;AA2DT,eAAeA,aAAf","sourcesContent":["import { MongoClient, ObjectId } from \"mongodb\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\nimport Head from \"next/head\";\nimport { Fragment } from \"react\";\n\nfunction MeetupDetails(props) {\n\treturn (\n\t\t<Fragment>\n\t\t\t<Head>\n\t\t\t\t<title>props.meetupData.title</title>\n\t\t\t\t<meta name='description' content={props.meetupData.description}/>\n\t\t\t</Head>\n\t\t\t<MeetupDetail\n\t\t\t\timage={props.meetupData.image}\n\t\t\t\ttitle={props.meetupData.title}\n\t\t\t\tdescription={props.meetupData.description}\n\t\t\t\taddress={props.meetupData.address}\n\t\t\t/>\n\t\t</Fragment>\n\t);\n}\nexport async function getStaticPaths() {\n\tconst client = await MongoClient.connect(\n\t\t\"mongodb+srv://Admin:Canada246!@cluster0.dvqbg.mongodb.net/?retryWrites=true&w=majority\"\n\t);\n\tconst db = client.db();\n\n\tconst meetupsCollection = db.collection(\"meetups\");\n\tconst meetups = await meetupsCollection.find({}, { _id: 1 }).toArray();\n\tclient.close();\n\treturn {\n\t\tfallback: false,\n\t\tpaths: meetups.map((meetup) => ({\n\t\t\tparams: { meetupId: meetup._id.toString() },\n\t\t})),\n\t};\n}\n\nexport async function getStaticProps(context) {\n\t// fetch data for a single meetup\n\tconst meetupId = context.params.meetupId;\n\n\tconst client = await MongoClient.connect(\n\t\t\"mongodb+srv://Admin:Canada246!@cluster0.dvqbg.mongodb.net/?retryWrites=true&w=majority\"\n\t);\n\tconst db = client.db();\n\n\tconst meetupsCollection = db.collection(\"meetups\");\n\tconst selectedMeetup = await meetupsCollection.findOne({ _id: ObjectId(meetupId) });\n\tclient.close();\n\n\treturn {\n\t\tprops: {\n\t\t\tmeetupData: {\n\t\t\t\tid: selectedMeetup._id.toString(),\n\t\t\t\ttitle: selectedMeetup.title,\n\t\t\t\taddress: selectedMeetup.address,\n\t\t\t\tdescription: selectedMeetup.description,\n\t\t\t\timage: selectedMeetup.image\n\t\t\t},\n\t\t},\n\t};\n}\n\nexport default MeetupDetails;\n"]},"metadata":{},"sourceType":"module"}