{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/andrii.shymko/ch/sandbox/06-onwards-to-a-bigger-project-starting-project/pages/[meetupId]/index.js\";\nimport { MongoClient } from \"mongodb\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\n\nfunction MeetupDetails() {\n  return /*#__PURE__*/_jsxDEV(MeetupDetail, {\n    image: \"https://images.pexels.com/photos/169647/pexels-photo-169647.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1\",\n    title: \"A first meetup\",\n    description: \"details about our meetup here\",\n    address: \"Dummy address here\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 3\n  }, this);\n}\n\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect(\"mongodb+srv://Admin:Canada246!@cluster0.dvqbg.mongodb.net/?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetupsCollection = db.collection(\"meetups\");\n  const meetups = await meetupsCollection.find({}, {\n    _id: 1\n  }).toArray();\n  return {\n    fallback: false,\n    paths: meetups.map(meetup => ({\n      params: {\n        meetupId: meetup._id.toString()\n      }\n    }))\n  };\n}\nexport async function getStaticProps(context) {\n  const meetupId = context.params.meetupId;\n  console.log(meetupId); // fetch data for a single meetup\n\n  return {\n    props: {\n      meetupData: {\n        image: \"https://images.pexels.com/photos/169647/pexels-photo-169647.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1\",\n        id: \"m1\",\n        title: \"First Meetup\",\n        address: \"Some Street 5, Some City\",\n        description: \"details about our meetup here\"\n      }\n    }\n  };\n}\nexport default MeetupDetails;","map":{"version":3,"sources":["/Users/andrii.shymko/ch/sandbox/06-onwards-to-a-bigger-project-starting-project/pages/[meetupId]/index.js"],"names":["MongoClient","MeetupDetail","MeetupDetails","getStaticPaths","client","connect","db","meetupsCollection","collection","meetups","find","_id","toArray","fallback","paths","map","meetup","params","meetupId","toString","getStaticProps","context","console","log","props","meetupData","image","id","title","address","description"],"mappings":";;AAAA,SAASA,WAAT,QAA4B,SAA5B;AACA,OAAOC,YAAP,MAAyB,uCAAzB;;AAEA,SAASC,aAAT,GAAyB;AACxB,sBACC,QAAC,YAAD;AACC,IAAA,KAAK,EAAC,+GADP;AAEC,IAAA,KAAK,EAAC,gBAFP;AAGC,IAAA,WAAW,EAAC,+BAHb;AAIC,IAAA,OAAO,EAAC;AAJT;AAAA;AAAA;AAAA;AAAA,UADD;AAQA;;AACD,OAAO,eAAeC,cAAf,GAAgC;AACtC,QAAMC,MAAM,GAAG,MAAMJ,WAAW,CAACK,OAAZ,CACnB,wFADmB,CAArB;AAGC,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AACA,QAAMC,OAAO,GAAG,MAAMF,iBAAiB,CAACG,IAAlB,CAAuB,EAAvB,EAA2B;AAACC,IAAAA,GAAG,EAAE;AAAN,GAA3B,EAAqCC,OAArC,EAAtB;AAED,SAAO;AACNC,IAAAA,QAAQ,EAAE,KADJ;AAENC,IAAAA,KAAK,EAAEL,OAAO,CAACM,GAAR,CAAYC,MAAM,KAAK;AAACC,MAAAA,MAAM,EAAE;AAACC,QAAAA,QAAQ,EAAEF,MAAM,CAACL,GAAP,CAAWQ,QAAX;AAAX;AAAT,KAAL,CAAlB;AAFD,GAAP;AAIA;AAED,OAAO,eAAeC,cAAf,CAA8BC,OAA9B,EAAuC;AAC7C,QAAMH,QAAQ,GAAGG,OAAO,CAACJ,MAAR,CAAeC,QAAhC;AACAI,EAAAA,OAAO,CAACC,GAAR,CAAYL,QAAZ,EAF6C,CAG7C;;AACA,SAAO;AACNM,IAAAA,KAAK,EAAE;AACNC,MAAAA,UAAU,EAAE;AACXC,QAAAA,KAAK,EACJ,+GAFU;AAGXC,QAAAA,EAAE,EAAE,IAHO;AAIXC,QAAAA,KAAK,EAAE,cAJI;AAKXC,QAAAA,OAAO,EAAE,0BALE;AAMXC,QAAAA,WAAW,EAAE;AANF;AADN;AADD,GAAP;AAYA;AAED,eAAe5B,aAAf","sourcesContent":["import { MongoClient } from \"mongodb\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\n\nfunction MeetupDetails() {\n\treturn (\n\t\t<MeetupDetail\n\t\t\timage='https://images.pexels.com/photos/169647/pexels-photo-169647.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1'\n\t\t\ttitle='A first meetup'\n\t\t\tdescription='details about our meetup here'\n\t\t\taddress='Dummy address here'\n\t\t/>\n\t);\n}\nexport async function getStaticPaths() {\n\tconst client = await MongoClient.connect(\n\t\t\t\"mongodb+srv://Admin:Canada246!@cluster0.dvqbg.mongodb.net/?retryWrites=true&w=majority\"\n\t\t);\n\t\tconst db = client.db();\n\n\t\tconst meetupsCollection = db.collection(\"meetups\");\n\t\tconst meetups = await meetupsCollection.find({}, {_id: 1}).toArray();\n\n\treturn {\n\t\tfallback: false,\n\t\tpaths: meetups.map(meetup => ({params: {meetupId: meetup._id.toString()}}))\n\t};\n}\n\nexport async function getStaticProps(context) {\n\tconst meetupId = context.params.meetupId;\n\tconsole.log(meetupId);\n\t// fetch data for a single meetup\n\treturn {\n\t\tprops: {\n\t\t\tmeetupData: {\n\t\t\t\timage:\n\t\t\t\t\t\"https://images.pexels.com/photos/169647/pexels-photo-169647.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1\",\n\t\t\t\tid: \"m1\",\n\t\t\t\ttitle: \"First Meetup\",\n\t\t\t\taddress: \"Some Street 5, Some City\",\n\t\t\t\tdescription: \"details about our meetup here\",\n\t\t\t},\n\t\t},\n\t};\n}\n\nexport default MeetupDetails;\n"]},"metadata":{},"sourceType":"module"}